plugins {
	id "fabric-loom" version "1.5.+"
	id "maven-publish"
}

def ENV = System.getenv()
def buildTime = ENV.BUILD_TIME ?: new Date().format('yyyyMMddHHmmss')

def javaVersion = 17

group = "dev.upcraft"
archivesBaseName = "glassential-fabric"

boolean isPreviewBuild = !ENV.TAG || ENV.TAG.matches(".+-.+")
def buildNumber = !ENV.TAG ? ("${ENV.BUILD_NUMBER ? "build.${ENV.BUILD_NUMBER}" : buildTime}-${project.minecraft_version}") : ""
version = (ENV.TAG ?: "development") + ((isPreviewBuild && !ENV.TAG) ? "+${buildNumber}" : "")

java {
	withSourcesJar()
	toolchain {
		languageVersion = JavaLanguageVersion.of(javaVersion)
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	// this will ensure that this task is redone when there"s a change
	inputs.property "version", project.version

	filteringCharset = "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from("LICENSE.md") {
		rename { "LICENSE_${archiveBaseName.get()}" }
	}

	manifest.mainAttributes(
			"Implementation-Title": project.archivesBaseName,
			"Implementation-Version": project.version,
			"Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}".toLowerCase(Locale.ROOT),
			"Built-On-Minecraft": project.minecraft_version,
			"Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
	)
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()

		if (ENV.MAVEN_UPLOAD_URL) {
			maven {
				url = ENV.MAVEN_UPLOAD_URL
				credentials {
					username = ENV.MAVEN_UPLOAD_USERNAME
					password = ENV.MAVEN_UPLOAD_PASSWORD
				}
			}
		}
	}
}
